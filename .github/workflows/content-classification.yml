# This workflow will train and test detection model on self-hosted runner. It assumes system or local Python is configured on the host.

name: Train detection model

on:
#  push:
#    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  train-test-release:
    runs-on: ml-gpu-runner
    steps:
      - uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: livepeer-ml
          service_account_key: ${{ secrets.GCP_SERVICE_KEY }}
          export_default_credentials: true
      - name: Install global dependencies
        run: python3 -m pip install -r requirements.txt
      - name: release
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "content-classification/models/current/tasmodel.pb"
          bodyFile: "content-classification/models/current/test.log"
          token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Install model dependencies
#        run: if [ -f content-classification/requirements.txt ]; then python3 -m pip install -r content-classification/requirements.txt; fi
#      - name: Sync the dataset
#        run: gsutil -m rsync -i -d -r gs://livepeer-ml-data /ccl-data/data
#      - name: Create data splits
#        run: |
#          cd utils
#          python3 split.py --data_dir /ccl-data/data/ --splits_out_dir /ccl-data/splits/ --out_dir /ccl-data/splits/ --resize_to 224,224
#      - name: Train model
#        run: |
#          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE
#          cd $GITHUB_WORKSPACE/content-classification/scripts/
#          python3 train.py --data_dir /ccl-data/splits/ --num_epochs 2 --batch_size 256
#      - name: Test model
#        run: |
#          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE
#          cd $GITHUB_WORKSPACE/content-classification/scripts/
#          python3 test.py --data_dir /ccl-data/splits/
#      - name: Commit and push changes
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          git config --global user.name 'livepeer-mlops'
#          git commit -a -m $(grep 'Test results' content-classification/models/current/test.log)
#          git push

